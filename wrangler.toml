#:schema node_modules/wrangler/config-schema.json
name = "vidqueue"
main = "src/index.ts"
compatibility_date = "2024-04-05"

logpush = true
tail_consumers = [{service = "vidqueue-tail"}]

[triggers]
crons = ["*/5 * * * *"]

# Variable bindings. These are arbitrary, plaintext strings (similar to environment variables)
# Note: Use secrets to store sensitive data.
# Docs: https://developers.cloudflare.com/workers/wrangler/configuration/#environment-variables
[vars]
CF_API = "https://api.cloudflare.com/client/v4/accounts"
# SECRETS:
# CF_STREAM_KEY
# CF_ACCT_TAG
# CF_QUEUE_ID

# Bind a Durable Object. Durable objects are a scale-to-zero compute primitive based on the actor model.
# Durable Objects can live for as long as needed. Use these when you need a long-running "server", such as in realtime apps.
# Docs: https://developers.cloudflare.com/workers/wrangler/configuration/#durable-objects
# [[durable_objects.bindings]]
# name = "MY_DURABLE_OBJECT"
# class_name = "MyDurableObject"

# Durable Object migrations.
# Docs: https://developers.cloudflare.com/workers/wrangler/configuration/#migrations
# [[migrations]]
# tag = "v1"
# new_classes = ["MyDurableObject"]

# Bind a KV Namespace. Use KV as persistent storage for small key-value pairs.
# Docs: https://developers.cloudflare.com/workers/wrangler/configuration/#kv-namespaces
# [[kv_namespaces]]
# binding = "MY_KV_NAMESPACE"
# id = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"

# Bind a Queue producer. Use this binding to schedule an arbitrary task that may be processed later by a Queue consumer.
# Docs: https://developers.cloudflare.com/workers/wrangler/configuration/#queues
[[queues.producers]]
binding = "VIDQUEUE"
queue = "vidqueue"

# Bind a Queue consumer. Queue Consumers can retrieve tasks scheduled by Producers to act on them.
# Docs: https://developers.cloudflare.com/workers/wrangler/configuration/#queues
[[queues.consumers]]
queue = "vidqueue"
type = "http_pull"
dead_letter_queue = "vidqueue-dlq"
max_batch_size = 5
max_batch_timeout = 30
max_retries = 10

# Bind another Worker service. Use this binding to call another Worker without network overhead.
# Docs: https://developers.cloudflare.com/workers/wrangler/configuration/#service-bindings
# [[services]]
# binding = "MY_SERVICE"
# service = "my-service"
